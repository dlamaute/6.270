%!PS-Adobe-2.0 EPSF-2.0
%%Title: XLwiring.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Fri Jan  3 07:29:59 2003
%%For: tdwan@citgo.mit.edu (Tehyih D Wan,,,,6172256339)
%%Orientation: Portrait
%%BoundingBox: 0 0 370 184
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-96.0 208.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 4460 m -1000 -1000 l 8758 -1000 l 8758 4460 l cp clip
 0.06000 0.06000 sc
% Polyline
1 slc
30.000 slw
n 2091 1735 m 2691 1735 l gs col0 s gr 
% Polyline
n 2091 2110 m 2691 2110 l gs col0 s gr 
% Polyline
n 2091 2260 m 2691 2260 l gs col0 s gr 
% Polyline
n 2616 835 m 3216 835 l gs col0 s gr 
% Polyline
n 2616 1210 m 3216 1210 l gs col0 s gr 
% Polyline
n 2616 1360 m 3216 1360 l gs col0 s gr 
/Helvetica ff 180.00 scf sf
4681 2420 m
gs 1 -1 sc (A: Vdd) col0 sh gr
/Helvetica ff 180.00 scf sf
4681 2645 m
gs 1 -1 sc (C: Yout) col0 sh gr
/Helvetica ff 180.00 scf sf
4681 2870 m
gs 1 -1 sc (D: Xout) col0 sh gr
/Helvetica ff 180.00 scf sf
4681 3095 m
gs 1 -1 sc (B: Self Test) col0 sh gr
/Helvetica ff 180.00 scf sf
4681 3320 m
gs 1 -1 sc (E: COM) col0 sh gr
7.500 slw
% Ellipse
n 6859 1660 32 32 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 6859 1810 32 32 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 6859 1960 32 32 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 6859 2260 32 32 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Polyline
30.000 slw
n 3591 2110 m 5991 2110 l gs col0 s gr 
% Polyline
n 3591 1885 m 5991 1885 l gs col0 s gr 
% Polyline
n 3591 2035 m 5991 2035 l gs col0 s gr 
% Polyline
n 3591 1960 m 5991 1960 l gs col0 s gr 
% Polyline
0 slc
n 5991 2035 m 6591 2035 l 6816 1960 l 6891 1960 l gs col0 s gr 
% Polyline
7.500 slw
n 7191 1360 m 7416 1135 l 7416 2935 l 7191 3235 l 7191 1360 l  cp gs col0 s gr 
% Polyline
n 7263 2038 m 7263 2413 l 7338 2338 l 7338 1963 l 7263 2038 l  cp gs col0 s gr 
% Polyline
n 7231 2042 m 7320 1953 l 7337 1953 l 7249 2042 l 7240 2042 l gs col0 s gr 
% Polyline
n 7262 2041 m 7235 2041 l 7235 2421 l 7262 2421 l cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
30.000 slw
n 6891 1660 m 7116 1660 l gs col0 s gr 
% Polyline
n 6891 1810 m 7116 1810 l gs col0 s gr 
% Polyline
n 6891 1960 m 7116 1960 l gs col0 s gr 
% Polyline
n 6891 2110 m 7116 2110 l gs col0 s gr 
% Polyline
n 6891 2260 m 7116 2260 l gs col0 s gr 
% Polyline
7.500 slw
n 2841 760 m 3066 760 l 3066 1435 l 2841 1435 l cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
1 slc
n 2841 760 m 2916 685 l 3141 685 l 3066 760 l 2841 760 l  cp gs col0 s gr 
% Polyline
0 slc
n 2316 1660 m 2541 1660 l 2541 2335 l 2316 2335 l cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
1 slc
n 2316 1660 m 2391 1585 l 2616 1585 l 2541 1660 l 2316 1660 l  cp gs col0 s gr 
% Polyline
n 3141 685 m 3141 1360 l 3066 1435 l 3066 760 l 3141 685 l  cp gs col0 s gr 
% Polyline
n 2616 1585 m 2616 2260 l 2541 2335 l 2541 1660 l gs col0 s gr 
% Polyline
n 3141 685 m 3141 1360 l 3066 1435 l 3066 760 l 3141 685 l  cp gs col0 s gr 
% Polyline
0 slc
n 7191 3235 m 7116 3235 l 7116 1360 l 7191 1360 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 474.40 90.67] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7116 1360 m 7341 1135 l 7416 1135 l 7191 1360 l 7116 1360 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 474.40 75.67] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
1 slc
30.000 slw
n 3591 2110 m 3588 2111 l 3582 2113 l 3571 2118 l 3555 2124 l 3534 2131 l
 3509 2141 l 3481 2151 l 3452 2161 l 3423 2171 l 3395 2181 l
 3368 2190 l 3342 2198 l 3318 2205 l 3295 2212 l 3273 2218 l
 3252 2223 l 3232 2227 l 3211 2231 l 3191 2235 l 3172 2238 l
 3153 2241 l 3133 2243 l 3111 2245 l 3089 2247 l 3065 2249 l
 3039 2251 l 3011 2252 l 2981 2253 l 2949 2255 l 2915 2256 l
 2881 2257 l 2846 2257 l 2812 2258 l 2780 2259 l 2752 2259 l
 2729 2260 l 2712 2260 l 2700 2260 l 2694 2260 l 2691 2260 l gs col0 s gr 
% Polyline
n 2691 2110 m 2692 2110 l 2696 2110 l 2706 2109 l 2721 2108 l 2740 2106 l
 2761 2104 l 2781 2100 l 2799 2097 l 2817 2092 l 2833 2087 l
 2849 2080 l 2866 2073 l 2878 2066 l 2890 2060 l 2903 2052 l
 2917 2044 l 2931 2036 l 2947 2027 l 2963 2017 l 2980 2007 l
 2998 1998 l 3016 1988 l 3035 1978 l 3053 1968 l 3072 1959 l
 3091 1951 l 3110 1943 l 3128 1935 l 3147 1929 l 3166 1923 l
 3183 1918 l 3201 1913 l 3220 1909 l 3240 1906 l 3262 1903 l
 3285 1900 l 3310 1897 l 3338 1895 l 3368 1893 l 3399 1891 l
 3432 1890 l 3465 1889 l 3496 1887 l 3525 1887 l 3549 1886 l
 3568 1885 l 3580 1885 l 3588 1885 l 3591 1885 l gs col0 s gr 
% Polyline
n 3591 2035 m 3588 2035 l 3580 2035 l 3568 2034 l 3549 2034 l 3525 2033 l
 3496 2032 l 3465 2030 l 3432 2028 l 3399 2026 l 3368 2024 l
 3338 2021 l 3310 2018 l 3285 2015 l 3262 2011 l 3240 2007 l
 3220 2003 l 3201 1997 l 3183 1992 l 3166 1985 l 3147 1977 l
 3128 1968 l 3110 1958 l 3091 1948 l 3072 1936 l 3053 1924 l
 3034 1911 l 3015 1898 l 2996 1885 l 2978 1872 l 2960 1859 l
 2943 1846 l 2926 1834 l 2910 1822 l 2895 1812 l 2881 1802 l
 2867 1793 l 2854 1785 l 2836 1776 l 2819 1768 l 2802 1761 l
 2783 1756 l 2762 1751 l 2740 1747 l 2716 1744 l 2691 1741 l
 2667 1738 l 2646 1737 l 2630 1736 l 2621 1735 l 2617 1735 l
 2616 1735 l gs col0 s gr 
% Polyline
n 3591 1960 m 3590 1960 l 3586 1959 l 3581 1957 l 3573 1955 l 3564 1951 l
 3553 1946 l 3541 1939 l 3530 1932 l 3519 1923 l 3509 1914 l
 3500 1903 l 3493 1890 l 3486 1876 l 3480 1860 l 3475 1842 l
 3470 1821 l 3466 1798 l 3463 1780 l 3461 1760 l 3459 1740 l
 3457 1718 l 3455 1695 l 3453 1670 l 3451 1644 l 3450 1617 l
 3448 1589 l 3447 1560 l 3445 1530 l 3444 1500 l 3443 1469 l
 3442 1438 l 3440 1408 l 3439 1377 l 3438 1347 l 3437 1318 l
 3436 1290 l 3435 1262 l 3434 1236 l 3433 1211 l 3432 1187 l
 3431 1164 l 3430 1143 l 3429 1123 l 3426 1092 l 3424 1063 l
 3421 1037 l 3417 1012 l 3414 989 l 3409 968 l 3405 949 l
 3400 933 l 3395 918 l 3389 905 l 3384 894 l 3378 884 l
 3372 876 l 3366 870 l 3360 865 l 3354 860 l 3343 854 l
 3331 849 l 3316 845 l 3299 842 l 3279 839 l 3258 837 l
 3238 836 l 3224 835 l 3217 835 l 3216 835 l gs col0 s gr 
% Polyline
0 slc
n 5991 2110 m 5994 2110 l 6002 2111 l 6015 2113 l 6035 2116 l 6061 2119 l
 6092 2123 l 6128 2128 l 6166 2132 l 6205 2138 l 6244 2143 l
 6281 2148 l 6317 2152 l 6350 2157 l 6381 2161 l 6409 2165 l
 6435 2169 l 6459 2172 l 6481 2175 l 6502 2179 l 6522 2182 l
 6541 2185 l 6564 2189 l 6585 2193 l 6607 2197 l 6629 2201 l
 6651 2205 l 6675 2210 l 6699 2216 l 6725 2221 l 6752 2227 l
 6779 2234 l 6806 2240 l 6830 2246 l 6852 2251 l 6869 2255 l
 6881 2258 l 6888 2259 l 6891 2260 l gs col0 s gr 
% Polyline
n 5991 1960 m 5994 1960 l 6002 1960 l 6014 1960 l 6033 1960 l 6057 1959 l
 6085 1959 l 6116 1959 l 6149 1958 l 6181 1958 l 6212 1957 l
 6241 1957 l 6267 1956 l 6292 1955 l 6314 1954 l 6335 1953 l
 6354 1952 l 6371 1951 l 6388 1949 l 6404 1948 l 6423 1945 l
 6441 1943 l 6459 1940 l 6477 1937 l 6496 1933 l 6513 1929 l
 6531 1925 l 6548 1921 l 6565 1916 l 6581 1912 l 6597 1907 l
 6612 1903 l 6626 1898 l 6640 1894 l 6653 1889 l 6666 1885 l
 6681 1880 l 6696 1875 l 6712 1870 l 6729 1864 l 6749 1857 l
 6770 1850 l 6793 1843 l 6817 1835 l 6840 1827 l 6861 1820 l
 6877 1815 l 6886 1812 l 6890 1810 l 6891 1810 l gs col0 s gr 
% Polyline
n 5991 1885 m 5994 1885 l 6001 1885 l 6013 1884 l 6029 1884 l 6051 1883 l
 6075 1882 l 6102 1880 l 6128 1879 l 6154 1877 l 6179 1874 l
 6203 1872 l 6225 1869 l 6247 1866 l 6267 1862 l 6287 1858 l
 6308 1853 l 6329 1848 l 6348 1842 l 6368 1836 l 6388 1830 l
 6409 1823 l 6431 1815 l 6454 1807 l 6477 1799 l 6501 1790 l
 6525 1781 l 6548 1772 l 6572 1764 l 6595 1755 l 6617 1746 l
 6638 1738 l 6658 1730 l 6677 1722 l 6695 1715 l 6711 1709 l
 6727 1703 l 6741 1698 l 6763 1690 l 6782 1683 l 6799 1678 l
 6815 1673 l 6830 1670 l 6845 1666 l 6860 1664 l 6872 1662 l
 6882 1661 l 6888 1660 l 6891 1660 l gs col0 s gr 
/Helvetica ff 150.00 scf sf
2197 904 m
gs 1 -1 sc (Yout) col0 sh gr
/Helvetica ff 150.00 scf sf
1600 1807 m
gs 1 -1 sc (Xout) col0 sh gr
/Helvetica ff 150.00 scf sf
1629 2200 m
gs 1 -1 sc (Vdd) col0 sh gr
/Helvetica ff 150.00 scf sf
1615 2346 m
gs 1 -1 sc (Gnd) col0 sh gr
/Times-Roman ff 150.00 scf sf
6891 1660 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman ff 150.00 scf sf
6891 1810 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 150.00 scf sf
6891 1960 m
gs 1 -1 sc (D) col0 sh gr
/Times-Roman ff 150.00 scf sf
6891 2110 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman ff 150.00 scf sf
6891 2260 m
gs 1 -1 sc (E) col0 sh gr
/Helvetica ff 180.00 scf sf
6666 3460 m
gs 1 -1 sc (ADXL202EB) col0 sh gr
/Helvetica ff 150.00 scf sf
1831 2615 m
gs 1 -1 sc (CONNECT TO TIC2) col0 sh gr
/Helvetica ff 150.00 scf sf
2401 530 m
gs 1 -1 sc (CONNECT TO TIC3) col0 sh gr
% Polyline
1 slc
n 3114 1006 m 3116 1006 l gs col0 s gr
% Polyline
n 2590 1909 m 2592 1909 l gs col0 s gr
% Polyline
n 7372 1661 m 7374 1661 l gs col0 s gr
% Polyline
n 7372 1942 m 7374 1942 l gs col0 s gr
% Polyline
n 7372 2096 m 7374 2096 l gs col0 s gr
% Polyline
n 7372 2264 m 7374 2264 l gs col0 s gr
% Polyline
n 7372 1801 m 7374 1801 l gs col0 s gr
$F2psEnd
rs
end
